{"version":3,"sources":["getWeb3.js","App.jsx","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","App","useState","inputValue","setInputValue","inputValueProposal","setInputValueProposal","inputValueVote","setInputValueVote","setWeb3","contract","setContract","addresses","setAddresses","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","userBalance","setUserBalance","connButtonText","setConnButtonText","options","filter","value","fromBlock","toBlock","useEffect","eth","getAccounts","accounts","net","getId","networkID","deployedNetwork","Voting","networks","instance","Contract","abi","address","alert","error","fetchData","accountChangedHandler","newAccount","getAccountBalance","toString","account","request","method","params","then","balance","ethers","utils","formatEther","catch","message","methods","addVoter","send","from","getPastEvents","results","err","e","target","startProposalsRegistering","endProposalsRegistering","addProposal","startVotingSession","setVote","endVotingSession","tallyVotes","events","WorkflowStatusChange","on","event","changed","str","winningProposalID","call","res","document","getElementById","innerText","location","reload","className","type","onChange","handleInputChange","onClick","handleInputProposalChange","handleInputVoteChange","id","isMetaMask","result","ReactDOM","createRoot","render","StrictMode"],"mappings":"m9yXAqCeA,EAnCC,kBACd,IAAIC,SAAQ,SAACC,EAASC,GAEpBC,OAAOC,iBAAiB,OAAxB,gCAAgC,wGAE1BD,OAAOE,SAFmB,wBAGtBC,EAAO,IAAIC,IAAKJ,OAAOE,UAHD,kBAMpBF,OAAOE,SAASG,SANI,OAQ1BP,EAAQK,GARkB,gDAU1BJ,EAAO,EAAD,IAVoB,gCAcrBC,OAAOG,MAERA,EAAOH,OAAOG,KACpBG,QAAQC,IAAI,2BACZT,EAAQK,KAIFK,EAAW,IAAIJ,IAAKK,UAAUC,aAClC,yBAEIP,EAAO,IAAIC,IAAKI,GACtBF,QAAQC,IAAI,gDACZT,EAAQK,IA3BoB,yDA8BjC,GAjCa,E,yBCgXDQ,MA5Wf,WAEE,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoDF,mBAAS,IAA7D,mBAAOG,EAAP,KAA2BC,EAA3B,KACA,EAA4CJ,mBAAS,IAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAAwBN,mBAAS,MAAjC,mBAAOT,EAAP,KAAagB,EAAb,KACA,EAAgCP,mBAAS,MAAzC,mBAAOQ,EAAP,KAAiBC,EAAjB,KACA,EAAkCT,mBAAS,MAA3C,mBAAOU,EAAP,KAAkBC,EAAlB,KAEA,EAAwCX,mBAAS,MAAjD,mBAAOY,EAAP,KAAqBC,EAArB,KACD,EAA4Cb,mBAAS,MAArD,mBAAOc,EAAP,KAAuBC,EAAvB,KACA,EAAsCf,mBAAS,MAA/C,mBAAOgB,EAAP,KAAoBC,EAApB,KACA,EAA4CjB,mBAAS,kBAArD,mBAAOkB,EAAP,KAAuBC,EAAvB,KAEKC,EAAU,CACZC,OAAQ,CACJC,MAAO,CAAC,OAAQ,SAEpBC,UAAW,EACXC,QAAS,UAGXC,qBAAU,WAAM,sDAEd,+HAEuBzC,GAAQ,GAF/B,cAEUO,EAFV,gBAG2BA,EAAKmC,IAAIC,cAHpC,cAGUC,EAHV,gBAI4BrC,EAAKmC,IAAIG,IAAIC,QAJzC,OAIUC,EAJV,OAKUC,EAAkBC,EAAOC,SAASH,GAClCI,EAAW,IAAI5C,EAAKmC,IAAIU,SAC5BH,EAAOI,IACPL,GAAmBA,EAAgBM,SAGrC/B,EAAQhB,GACRkB,EAAY0B,GACZxB,EAAaiB,GAbjB,kDAiBIW,MAAM,EAAD,IACL7C,QAAQ8C,MAAR,MAlBJ,2DAFc,0DACdC,EAwBD,GAAC,IAEF,IAsBKC,EAAwB,SAACC,GAC9B5B,EAAkB4B,GAClBC,EAAkBD,EAAWE,WAC7B,EAEKD,EAAoB,SAACE,GAC1B1D,OAAOE,SAASyD,QAAQ,CAACC,OAAQ,iBAAkBC,OAAQ,CAACH,EAAS,YACpEI,MAAK,SAAAC,GACLlC,EAAemC,SAAOC,MAAMC,YAAYH,GACxC,IACAI,OAAM,SAAAf,GACN3B,EAAgB2B,EAAMgB,QACtB,GACD,EApFa,sDA+Gb,2FACqB,KAAfvD,EADN,uBAEIsC,MAAM,kCAFV,0CAKQ/B,EAASiD,QAAQC,SAASzD,GAAY0D,KAAK,CAACC,KAAMlD,EAAU,KALpE,OAOEF,EAASqD,cAAc,kBAAmBzC,GACrC8B,MAAK,SAAAY,GAAO,OAAIpE,QAAQC,IAAImE,EAAhB,IACZP,OAAM,SAAAQ,GAAG,MAAI,WAAJ,IAThB,4CA/Ga,4EA4Hb,WAAiCC,GAAjC,2EACEtE,QAAQC,IAAIqE,EAAEC,OAAO3C,OACrBpB,EAAc8D,EAAEC,OAAO3C,OAFzB,4CA5Ha,4EAiIb,WAAyC0C,GAAzC,2EACEtE,QAAQC,IAAIqE,EAAEC,OAAO3C,OACrBlB,EAAsB4D,EAAEC,OAAO3C,OAFjC,4CAjIa,8EAsIb,WAAqC0C,GAArC,2EACEtE,QAAQC,IAAIqE,EAAEC,OAAO3C,OACrBhB,EAAkB0D,EAAEC,OAAO3C,OAF7B,4CAtIa,8EA2Ib,wGACQd,EAASiD,QAAQS,4BAA4BP,KAAK,CAACC,KAAMlD,EAAU,KAD3E,OAEEF,EAASqD,cAAc,uBAAwBzC,GAC1C8B,MAAK,SAAAY,GAAO,OAAIpE,QAAQC,IAAImE,EAAhB,IACZP,OAAM,SAAAQ,GAAG,MAAI,WAAJ,IAJhB,4CA3Ia,8EAkJb,wGACQvD,EAASiD,QAAQU,0BAA0BR,KAAK,CAACC,KAAMlD,EAAU,KADzE,OAEEF,EAASqD,cAAc,uBAAwBzC,GAC1C8B,MAAK,SAAAY,GAAO,OAAIpE,QAAQC,IAAImE,EAAhB,IACZP,OAAM,SAAAQ,GAAG,MAAI,WAAJ,IAJhB,4CAlJa,8EAyJb,2FAC6B,KAAvB5D,EADN,uBAEIoC,MAAM,kCAFV,0CAKQ/B,EAASiD,QAAQW,YAAYjE,GAAoBwD,KAAK,CAACC,KAAMlD,EAAU,KAL/E,OAMEF,EAASqD,cAAc,qBAAsBzC,GACxC8B,MAAK,SAAAY,GAAO,OAAIpE,QAAQC,IAAImE,EAAhB,IACZP,OAAM,SAAAQ,GAAG,MAAI,WAAJ,IARhB,4CAzJa,8EAoKb,wGACQvD,EAASiD,QAAQY,qBAAqBV,KAAK,CAACC,KAAMlD,EAAU,KADpE,OAEEF,EAASqD,cAAc,uBAAwBzC,GAC1C8B,MAAK,SAAAY,GAAO,OAAIpE,QAAQC,IAAImE,EAAhB,IACZP,OAAM,SAAAQ,GAAG,MAAI,WAAJ,IAJhB,4CApKa,8EA2Kb,wGACQvD,EAASiD,QAAQa,QAAQjE,GAAgBsD,KAAK,CAACC,KAAMlD,EAAU,KADvE,OAEEF,EAASqD,cAAc,uBAAwBzC,GAC1C8B,MAAK,SAAAY,GAAO,OAAIpE,QAAQC,IAAImE,EAAhB,IACZP,OAAM,SAAAQ,GAAG,MAAI,WAAJ,IAJhB,4CA3Ka,8EAkLb,wGACQvD,EAASiD,QAAQc,mBAAmBZ,KAAK,CAACC,KAAMlD,EAAU,KADlE,OAEEF,EAASqD,cAAc,uBAAwBzC,GAC1C8B,MAAK,SAAAY,GAAO,OAAIpE,QAAQC,IAAImE,EAAhB,IACZP,OAAM,SAAAQ,GAAG,MAAI,WAAJ,IAJhB,4CAlLa,8EAyLb,wGACQvD,EAASiD,QAAQe,aAAab,KAAK,CAACC,KAAMlD,EAAU,KAD5D,OAEEF,EAASiE,OAAOC,qBAAqBtD,GAClCuD,GAAG,QAAQ,SAAAC,GAAK,OAAIlF,QAAQC,IAAIiF,EAAhB,IAChBD,GAAG,WAAW,SAAAE,GAAO,OAAInF,QAAQC,IAAIkF,EAAhB,IACrBF,GAAG,SAAS,SAAAZ,GAAG,MAAI,sBAAJ,IACfY,GAAG,aAAa,SAAAG,GAAG,OAAIpF,QAAQC,IAAImF,EAAhB,IANxB,4CAzLa,8EAkMb,+FACEpF,QAAQC,IAAI,cADd,SAEQa,EAASiD,QAAQsB,oBAAoBC,MAAK,SAASjB,EAAKkB,GAC5DC,SAASC,eAAe,OAAOC,UAAY,iCAAiCH,IAC5EvF,QAAQC,IAAIsF,EACb,IALH,4CAlMa,sBA8Mb,OAHD7F,OAAOE,SAASqF,GAAG,kBAAmBjC,GACtCtD,OAAOE,SAASqF,GAAG,gBAtHS,WAE3BvF,OAAOiG,SAASC,QAChB,IAqHI/F,EAeF,sBAAKgG,UAAU,MAAf,UAEE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,2CAAczE,OAEhB,qBAAKyE,UAAU,iBAAf,SACE,2CAAcvE,OAEbJ,EAGH,qBAAK2E,UAAU,uBAAf,SACE,mDAKJ,sBAAKA,UAAU,uBAAf,UACE,4EACA,sBAAKA,UAAU,gBAAf,UAEE,uBACEC,KAAK,OACLlE,MAAOrB,EACPwF,SAAW,SAACzB,GAAD,OAtPR,2CAsPe0B,CAAkB1B,EAAzB,IACb,wBAAQ2B,QAvPH,2CAuPL,+BAMJ,uBAhCF,SAgCiB,uBAhCjB,SAgCgC,uBAG9B,sBAAKJ,UAAU,2BAAf,UACE,wFACA,qBAAKA,UAAU,gBAAf,SAEE,wBAAQI,QApQH,4CAoQL,8BAMJ,uBA7CF,SA6CiB,uBA7CjB,SA6CgC,uBAE9B,sBAAKJ,UAAU,yBAAf,UACE,yDACA,sBAAKA,UAAU,kBAAf,UAEE,uBACEC,KAAK,OACLlE,MAAOnB,EACPsF,SAAW,SAACzB,GAAD,OAnRR,2CAmRe4B,CAA0B5B,EAAjC,IACb,wBAAQ2B,QApRH,4CAoRL,+BAKJ,uBA5DF,SA4DiB,uBA5DjB,SA4DgC,uBAG9B,sBAAKJ,UAAU,qCAAf,UACE,qFACA,qBAAKA,UAAU,8BAAf,SAEE,wBAAQI,QAhSH,4CAgSL,8BAMJ,uBAzEF,SAyEiB,uBAzEjB,SAyEgC,uBAG9B,sBAAKJ,UAAU,gCAAf,UACE,8DACA,qBAAKA,UAAU,yBAAf,SAEE,wBAAQI,QA7SH,4CA6SL,8BAMJ,uBAtFF,SAsFiB,uBAtFjB,SAsFgC,uBAE9B,sBAAKJ,UAAU,qBAAf,UACE,8DACA,sBAAKA,UAAU,cAAf,UACA,uBACIC,KAAK,OACLlE,MAAOjB,EACPoF,SAAW,SAACzB,GAAD,OA3TR,4CA2Te6B,CAAsB7B,EAA7B,IACb,wBAAQ2B,QA5TH,4CA4TL,+BAKJ,uBApGF,SAoGiB,uBApGjB,SAoGgC,uBAG9B,sBAAKJ,UAAU,8BAAf,UACE,0DACA,qBAAKA,UAAU,uBAAf,SAEE,wBAAQI,QAxUH,4CAwUL,8BAMJ,uBAjHF,SAiHiB,uBAjHjB,SAiHgC,uBAG9B,sBAAKJ,UAAU,wBAAf,UACE,yDACA,qBAAKA,UAAU,iBAAf,SAEE,wBAAQI,QArVH,4CAqVL,8BAMJ,uBA9HF,SA8HiB,uBA9HjB,SA8HgC,uBAE9B,sBAAKJ,UAAU,oBAAf,UACE,0DACA,qBAAKA,UAAU,aAAf,SACE,wBAAQI,QAhWH,4CAgWL,2BAGF,qBAAKG,GAAG,cAjJV,sBAAKP,UAAU,aAAf,UACE,wBAAQI,QAlKe,WACzBvG,OAAOE,UAAYF,OAAOE,SAASyG,YACtCrG,QAAQC,IAAI,kBAEZP,OAAOE,SAASyD,QAAQ,CAAEC,OAAQ,wBACjCE,MAAK,SAAA8C,GACLtD,EAAsBsD,EAAO,IAC7B7E,EAAkB,oBAClByB,EAAkBoD,EAAO,GACzB,IACAzC,OAAM,SAAAf,GACN3B,EAAgB2B,EAAMgB,QAEtB,MAGD9D,QAAQC,IAAI,4BACZkB,EAAgB,yDAEjB,EA+IM,SAAwCK,IACxC,uBAFF,4CAwJL,EC3WY+E,IAASC,WAAWhB,SAASC,eAAe,SACpDgB,OACH,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,M","file":"static/js/main.4b00dfe7.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import { useState, useEffect } from \"react\";\nimport Voting from \"./contracts/Voting.json\";\nimport getWeb3 from \"./getWeb3.js\";\nimport \"./App.css\";\nimport {ethers} from 'ethers';\n\nfunction App() {\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const [inputValueProposal, setInputValueProposal] = useState(\"\");\n  const [inputValueVote, setInputValueVote] = useState(\"\");\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [addresses, setAddresses] = useState(null);\n  // const [isOwner, setIsOwner] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n\tconst [defaultAccount, setDefaultAccount] = useState(null);\n\tconst [userBalance, setUserBalance] = useState(null);\n\tconst [connButtonText, setConnButtonText] = useState('Connect Wallet');\n\n  let options = {\n    filter: {\n        value: ['1000', '1337']    //Only get events where transfer value was 1000 or 1337\n    },\n    fromBlock: 0,                  //Number || \"earliest\" || \"pending\" || \"latest\"\n    toBlock: 'latest'\n  };\n\n  useEffect(() => {\n    fetchData();\n    async function fetchData() {\n      try{\n        const web3 = await getWeb3(true);\n        const accounts = await web3.eth.getAccounts();\n        const networkID = await web3.eth.net.getId();\n        const deployedNetwork = Voting.networks[networkID];\n        const instance = new web3.eth.Contract(\n          Voting.abi,\n          deployedNetwork && deployedNetwork.address,\n        );\n\n        setWeb3(web3);\n        setContract(instance);\n        setAddresses(accounts);\n\n      }\n      catch (err) {\n        alert(err);\n        console.error(err);\n      }\n    };\n\n\n  },[]);\n\n  const connectWalletHandler = () => {\n\t\tif (window.ethereum && window.ethereum.isMetaMask) {\n\t\t\tconsole.log('MetaMask Here!');\n\n\t\t\twindow.ethereum.request({ method: 'eth_requestAccounts'})\n\t\t\t.then(result => {\n\t\t\t\taccountChangedHandler(result[0]);\n\t\t\t\tsetConnButtonText('Wallet Connected');\n\t\t\t\tgetAccountBalance(result[0]);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsetErrorMessage(error.message);\n\t\t\t\n\t\t\t});\n\n\t\t} else {\n\t\t\tconsole.log('Need to install MetaMask');\n\t\t\tsetErrorMessage('Please install MetaMask browser extension to interact');\n\t\t}\n\t}\n\n\t// update account, will cause component re-render\n\tconst accountChangedHandler = (newAccount) => {\n\t\tsetDefaultAccount(newAccount);\n\t\tgetAccountBalance(newAccount.toString());\n\t}\n\n\tconst getAccountBalance = (account) => {\n\t\twindow.ethereum.request({method: 'eth_getBalance', params: [account, 'latest']})\n\t\t.then(balance => {\n\t\t\tsetUserBalance(ethers.utils.formatEther(balance));\n\t\t})\n\t\t.catch(error => {\n\t\t\tsetErrorMessage(error.message);\n\t\t});\n\t};\n\n\tconst chainChangedHandler = () => {\n\t\t// reload the page to avoid any errors with chain change mid use of application\n\t\twindow.location.reload();\n\t}\n\n  // async function fetchOwner() {\n  //   if (typeof window.ethereum !== 'undefined') {\n  //     try {\n  //       const owner = await contrat.methods.owner().call({from: owner});\n  //       console.log(\"isOwner\");\n  //       console.log(isOwner);\n  //       setIsOwner(owner.toLowerCase() === addresses[0].toLowerCase());\n  //     } catch (e) {\n  //       console.log('error fetching owner: ', e);\n  //     }\n  //   }\n  // }\n\n  // useEffect(() => {\n  //   if (addresses) {\n  //     fetchOwner();\n  //   }\n  //   // eslint-disable-next-line\n  // }, [addresses]);\n\n  async function addWhitelist () {\n    if (inputValue === \"\") {\n      alert(\"Please enter a value to write.\");\n      return;\n    }\n    await contract.methods.addVoter(inputValue).send({from: addresses[0]});\n    \n    contract.getPastEvents('VoterRegistered', options)\n        .then(results => console.log(results))\n        .catch(err => \"throw err\");\n    \n  };\n\n  async function handleInputChange(e) {\n    console.log(e.target.value);\n    setInputValue(e.target.value);\n  };\n\n  async function handleInputProposalChange(e) {\n    console.log(e.target.value);\n    setInputValueProposal(e.target.value);\n  };\n\n  async function handleInputVoteChange(e) {\n    console.log(e.target.value);\n    setInputValueVote(e.target.value);\n  };  \n\n  async function startProposalsRegistering(){\n    await contract.methods.startProposalsRegistering().send({from: addresses[0]});\n    contract.getPastEvents('WorkflowStatusChange', options)\n        .then(results => console.log(results))\n        .catch(err => \"throw err\");\n  }\n\n  async function endProposalsRegistering(){\n    await contract.methods.endProposalsRegistering().send({from: addresses[0]});\n    contract.getPastEvents('WorkflowStatusChange', options)\n        .then(results => console.log(results))\n        .catch(err => \"throw err\");\n  }\n\n  async function addProposal () {\n    if (inputValueProposal === \"\") {\n      alert(\"Please enter a value to write.\");\n      return;\n    }\n    await contract.methods.addProposal(inputValueProposal).send({from: addresses[0]});\n    contract.getPastEvents('ProposalRegistered', options)\n        .then(results => console.log(results))\n        .catch(err => \"throw err\");\n  };\n\n  async function startVotingSession () {\n    await contract.methods.startVotingSession().send({from: addresses[0]});\n    contract.getPastEvents('WorkflowStatusChange', options)\n        .then(results => console.log(results))\n        .catch(err => \"throw err\");\n  };\n  \n  async function setVote () {\n    await contract.methods.setVote(inputValueVote).send({from: addresses[0]});\n    contract.getPastEvents('WorkflowStatusChange', options)\n        .then(results => console.log(results))\n        .catch(err => \"throw err\");\n  };  \n\n  async function endVotingSession () {\n    await contract.methods.endVotingSession().send({from: addresses[0]});\n    contract.getPastEvents('WorkflowStatusChange', options)\n        .then(results => console.log(results))\n        .catch(err => \"throw err\");\n  };\n\n  async function tallyVotes () {\n    await contract.methods.tallyVotes().send({from: addresses[0]});\n    contract.events.WorkflowStatusChange(options)\n      .on('data', event => console.log(event))\n      .on('changed', changed => console.log(changed))\n      .on('error', err => \"erreur rencontrée\")\n      .on('connected', str => console.log(str));\n  };\n\n  async function resultFunc () {\n    console.log(\"resultFunc\");\n    await contract.methods.winningProposalID().call(function(err, res){\n      document.getElementById('amt').innerText = \"La proposition gagnante est : \".res;\n      console.log(res);\n    });\n  };\n  \n  // listen for account changes\n\twindow.ethereum.on('accountsChanged', accountChangedHandler);\n\twindow.ethereum.on('chainChanged', chainChangedHandler);\n\n  if(!web3) {\n    \n    return (\n      \n      <div className=\"App-header\">\n        <button onClick={connectWalletHandler}>{connButtonText}</button>\n        <br></br>\n        Loading Web3, accounts, and contract...\n      </div>\n      \n    );\n  }\n\n  return (\n    \n    <div className=\"App\">\n\n      <div className='walletCard'>\n        <div className='accountDisplay'>\n          <h3>Address: {defaultAccount}</h3>\n        </div>\n        <div className='balanceDisplay'>\n          <h3>Balance: {userBalance}</h3>\n        </div>\n          {errorMessage}\n        \n\n        <div className=\"App-header whitelist\">\n          <h1>DApp de vote</h1> \n        </div>\n      </div>\n      \n      {/* {isOwner ? ( */}\n      <div className=\"App-header whitelist\">\n        <h1>Ajouter une addresse à la liste blanche</h1>        \n        <div className=\"whitelist-div\">\n\n          <input\n            type=\"text\"\n            value={inputValue}\n            onChange={ (e) => handleInputChange(e) } />\n          <button onClick={addWhitelist}>  Ajouter  </button>\n\n        </div>\n      </div>\n      {/* ) : (null)}; */}\n\n      <br></br>      <hr></hr>      <br></br>\n\n      {/* {isOwner ? ( */}\n      <div className=\"App-header StartProposal\">\n        <h1>Commencer la session d'enregistrement des propositions</h1>        \n        <div className=\"whitelist-div\">\n\n          <button onClick={startProposalsRegistering}>  Valider  </button>\n          \n        </div>\n      </div>\n      {/* ) : (null)}; */}\n\n      <br></br>      <hr></hr>      <br></br>\n\n      <div className=\"App-header addProposal\">\n        <h1>Ajouter une proposition</h1>        \n        <div className=\"addProposal-div\">\n\n          <input\n            type=\"text\"\n            value={inputValueProposal}\n            onChange={ (e) => handleInputProposalChange(e) } />\n          <button onClick={addProposal}>  Ajouter  </button>\n\n        </div>\n      </div>\n\n      <br></br>      <hr></hr>      <br></br>\n\n      {/* {isOwner ? ( */}\n      <div className=\"App-header endProposalsRegistering\">\n        <h1>Fin de la session d'enregistrement des propositions</h1>        \n        <div className=\"endProposalsRegistering-div\">\n\n          <button onClick={endProposalsRegistering}>  Valider  </button>\n          \n        </div>\n      </div>\n      {/* ) : (null)}; */}\n      \n      <br></br>      <hr></hr>      <br></br>\n\n      {/* {isOwner ? ( */}\n      <div className=\"App-header startVotingSession\">\n        <h1>Commencer la session de vote</h1>        \n        <div className=\"startVotingSession-div\">\n\n          <button onClick={startVotingSession}>  Valider  </button>\n          \n        </div>\n      </div>\n      {/* ) : (null)}; */}\n\n      <br></br>      <hr></hr>      <br></br>\n\n      <div className=\"App-header setVote\">\n        <h1>Voter pour les propositions </h1>        \n        <div className=\"setVote-div\">\n        <input\n            type=\"text\"\n            value={inputValueVote}\n            onChange={ (e) => handleInputVoteChange(e) } />\n          <button onClick={setVote}>  Valider  </button>\n          \n        </div>\n      </div>\n\n      <br></br>      <hr></hr>      <br></br>\n\n      {/* {isOwner ? ( */}\n      <div className=\"App-header endVotingSession\">\n        <h1>Finir la session de vote</h1>        \n        <div className=\"endVotingSession-div\">\n\n          <button onClick={endVotingSession}>  Valider  </button>\n          \n        </div>\n      </div>\n      {/* ) : (null)}; */}\n\n      <br></br>      <hr></hr>      <br></br>\n\n      {/* {isOwner ? ( */}\n      <div className=\"App-header tallyVotes\">\n        <h1>Comptabiliser les votes</h1>        \n        <div className=\"tallyVotes-div\">\n\n          <button onClick={tallyVotes}>  Valider  </button>\n          \n        </div>\n      </div>\n      {/* ) : (null)}; */}\n\n      <br></br>      <hr></hr>      <br></br>\n\n      <div className=\"App-header result\">\n        <h1>Connaitre le résultat</h1>        \n        <div className=\"result-div\">\n          <button onClick={resultFunc}>  Valider  </button>          \n        </div>\n        \n        <div id=\"amt\">\n\n        </div>\n      </div>\n    \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}